plugins {
	id 'maven-publish'
	alias(libs.plugins.quilt.loom)
	alias(libs.plugins.kotlin)
}

archivesBaseName = project.archives_base_name
version = project.version
group = project.maven_group

repositories {
	// Add repositories to retrieve artifacts from in here.
	// You should only use this when depending on other mods because
	// Loom adds the essential maven repositories to download Minecraft and libraries from automatically.
	// See https://docs.gradle.org/current/userguide/declaring_repositories.html
	// for more information about repositories.
	maven {
		name "ParchmentMC"
		url "https://maven.parchmentmc.org"
		content {
			includeGroup 'org.parchmentmc.data'
		}
	}
	maven {
		name = "FabricMC"
		url = "https://maven.fabricmc.net/"
	}
	maven {
		name = "JitPack"
		url 'https://jitpack.io'
	}
	maven {
		name = "Will BL"
		url = "https://maven.willbl.dev/releases"
	}
	maven {
		name = "Sonatype"
		url 'https://oss.sonatype.org/content/repositories/snapshots'
	}
	maven {
		name = "Jamies"
		url "https://maven.jamieswhiteshirt.com/libs-release/"
		content {
			includeGroup "com.jamieswhiteshirt"
		}
	}
	maven {
		name = "Jared"
		url 'https://maven.blamejared.com'
		content {
			includeGroup "vazkii.patchouli"
		}
	}
	maven {
		name = "Ladysnake Libs"
		url = 'https://ladysnake.jfrog.io/artifactory/mods'
		content {
			includeGroup "io.github.ladysnake"
			includeGroupByRegex "io\\.github\\.onyxstudios.*"
			includeGroupByRegex "dev\\.onyxstudios.*"
		}
	}
	maven {
		name = "GeckoLib"
		url = "https://dl.cloudsmith.io/public/geckolib3/geckolib/maven"
		content {
			includeGroup "software.bernie.geckolib"
		}
	}
	maven {
		name = "Cotton"
		url = "https://server.bbkr.space/artifactory/libs-release/"
		content {
			includeGroup "io.github.cottonmc"
		}
	}
	maven {
		name = "Shedaniel"
		url = "https://maven.shedaniel.me"
		content {
			includeGroupByRegex "dev\\.architectury.*"
			includeGroupByRegex "me\\.shedaniel.*"
			includeGroupByRegex "me\\.sargunvohra.*"
		}
	}
	maven {
		name = "Terraformers"
		url = "https://maven.terraformersmc.com/releases/"
		content {
			includeGroup "io.github.prospector"
			includeGroup "com.terraformersmc"
		}
	}
	maven {
		name = "Architectury"
		url "https://maven.architectury.dev/"
		content {
			includeGroup "dev.architectury"
		}
	}
	maven {
		name = "cafeteria.dev"
		url = 'https://maven.cafeteria.dev'
		content {
			includeGroup 'net.adriantodt.fabricmc'
		}
	}
	maven {
		name = "Flemmli97"
		url "https://gitlab.com/api/v4/projects/21830712/packages/maven"
		content {
			includeGroup 'io.github.flemmli97'
		}
	}
	maven {
		name = "Gunpowder"
		url = "https://maven.martmists.com/releases"
		content {
			includeGroup 'io.github.gunpowder'
		}
	}
	maven {
		name = "Permissions"
		url = "https://maven.nucleoid.xyz"
		content {
			includeGroup 'eu.pb4'
		}
	}
	maven {
		name = "HavenKing"
		url = "https://hephaestus.dev/release"
		content {
			includeGroup 'dev.inkwell'
		}
	}
	maven {
		name = "Flemmli97"
		url = "https://gitlab.com/api/v4/projects/21830712/packages/maven"
		content {
			includeGroup 'io.github.flemmli97'
		}
	}
	maven {
		name = "Appleskin"
		url = "https://maven.ryanliptak.com/"
		content {
			includeGroup 'squeek.appleskin'
		}
	}
	maven {
		name = "CurseMaven"
		url "https://www.cursemaven.com"
		content {
			includeGroup "curse.maven"
		}
	}

	mavenLocal()
	mavenCentral()
}

// All the dependencies are declared at gradle/libs.version.toml and referenced with "libs.<id>"
// See https://docs.gradle.org/current/userguide/platforms.html for information on how version catalogs work.
dependencies {
	minecraft libs.minecraft
	mappings loom.layered {
		officialMojangMappings()
		parchment("org.parchmentmc.data:parchment-${libs.versions.minecraft.get()}:${libs.versions.parchment.get()}@zip")
	}
	modImplementation libs.quilt.loader

	modImplementation libs.quilted.fabric.api
	modImplementation(libs.haema) {
		exclude(group: "net.fabricmc.fabric-api")
		exclude(module: "fabric-loader")
	}
}

processResources {
	inputs.property "version", version

	filesMatching('quilt.mod.json') {
		expand "version": version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.encoding = "UTF-8"
	// Minecraft 1.18 (1.18-pre2) upwards uses Java 17.
	it.options.release = 17
}

java {
	// Still required by IDEs such as Eclipse and Visual Studio Code
	sourceCompatibility = JavaVersion.VERSION_17
	targetCompatibility = JavaVersion.VERSION_17

	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()

	// If this mod is going to be a library, then it should also generate Javadocs in order to aid with developement.
	// Uncomment this line to generate them.
	// withJavadocJar()
}

// If you plan to use a different file for the license, don't forget to change the file name here!
jar {
	from("LICENSE") {
		rename { "${it}_${archivesBaseName}" }
	}
}

// Configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			from components.java
		}
	}

	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	repositories {
		// Add repositories to publish to here.
		// Notice: This block does NOT have the same function as the block in the top level.
		// The repositories here will be used for publishing your artifact, not for
		// retrieving dependencies.
	}
}

compileKotlin.kotlinOptions.jvmTarget = "17"

/**
 * https://dev.to/williambl/mixins-kotlin-and-default-methods-why-they-don-t-work-together-417d
 */
tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
	kotlinOptions {
		freeCompilerArgs += '-Xjvm-default=all'
	}
}
